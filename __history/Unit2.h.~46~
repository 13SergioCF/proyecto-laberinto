//---------------------------------------------------------------------------

#ifndef Unit2H
#define Unit2H
//---------------------------------------------------------------------------
const maxf=50;
const maxc=50;
class nodo {
	public:
	float dato;
	nodo* enlace_Iz;
	nodo* enlace_Der;
	nodo()
	{
		dato=0;
		enlace_Iz=NULL;
		enlace_Der=NULL;
	}
};
class pila {
   private:
			nodo* cabeza;
			int numNodos;
   public:
		   pila();
		  pila(nodo* cabeza,int numNodos){
		   cabeza=NULL;
		   numNodos = 0; }
		bool 	esVacia();
		nodo* 	cab();
		void Insertar_Ini(int x);
		void InsertarFinal(int y);
		nodo* nodoFinal();
		nodo* inicio();
		void EliminarFinal();
		void eliminarInicio();

};
class CMatriz : public pila{
  private:
	  int n,m;
	  float Matriz[maxf][maxc];
	  void SetN(int valor);
	  int GetN();
	  void SetM(int valor);
	  int GetM();
	  void SetElem(int f,int c, float elem);
	  float GetElem(int f, int c);

   public:
		  CMatriz();
	  CMatriz(nodo* cabeza,int numNodos,int n,int m): pila(cabeza,numNodos){n=0; m=0;}
	  __property int Filas={read=GetM, write=SetM};
	  __property int Columnas={read=GetN, write=SetN};
	  __property float Celda[int f][int c]={read=GetElem, write=SetElem};
	  void generar();
	  void matriz();
	  int entrada();
	  int salida();
	  void recorrer(int fil, int col);
	  void atras();
	  void iniciar();
	  void recorrido();
};
#endif
